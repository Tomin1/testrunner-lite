<?xml version="1.0" encoding="ISO-8859-1"?>
<testdefinition version="1.0">
  <suite name="testrunner-lite-regression-tests">
    <set name="basic-regression-tests">
      <case name="trlitereg01">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg01.xml</step>
      </case>

      <case name="trlitereg02">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg02.xml</step>
      </case>

      <case name="trlitereg03">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg03.xml</step>
      </case>

      <case name="trlitereg04">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg04.xml</step>
      </case>

      <case name="trlitereg05">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg05.xml</step>
      </case>

      <case name="trlitereg06">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg06.xml</step>
      </case>

      <case name="trlitereg07">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg07.xml</step>
      </case>

      <case name="trlitereg08">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg08.xml</step>
      </case>

      <case name="trlitereg09">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg09.xml</step>
      </case>

      <case name="trlitereg10">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg10.xml</step>
      </case>

      <case name="trlitereg12" bugzilla_id="11032">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg12.xml</step>
      </case>

      <case name="trlitereg13" bugzilla_id="10726">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg13.xml</step>
      </case>

      <case name="trlitereg14" bugzilla_id="11475">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg14.xml</step>
      </case>

      <case name="trlitereg15" feature="11039">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg15.xml</step>
      </case>

      <case name="trlitereg16" feature="11039">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg16.xml -M</step>
      </case>

      <case name="trlitereg17" bugzilla_id="12537">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg17.xml</step>
      </case>

      <case name="trlitereg18">
	<step>/usr/share/testrunner-lite-regression-tests/regtester.sh /usr/share/testrunner-lite-regression-tests/trlitereg18.xml</step>
      </case>


      <environments>
	<scratchbox>false</scratchbox>
	<hardware>true</hardware>
      </environments>
    </set>


    <set name="test_executor_tests">
      <pre_steps>
	<step>rm -fr /tmp/testrunnerlitetestdir</step>
      </pre_steps>

      <case name="test_background_process_cleanup">
	<step>testrunner-lite -v -f /usr/share/testrunner-lite-regression-tests/testdata/testrunner-tests-bg.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>sleep 1</step>
	<step>! pidof unterminating</step>
      </case>

      <case name="test_presteps_failure_info">
	<step>testrunner-lite -v -f /usr/share/testrunner-lite-regression-tests/testdata/testrunner-tests-pre_step-fail.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>grep step /tmp/testrunnerlitetestdir/res.xml | grep &quot;pre_steps failed&quot; </step>
	<step>grep case /tmp/testrunnerlitetestdir/res.xml | grep &quot;pre_steps failed&quot; </step>
      </case>

      <case name="test_domain_and_feature_results">
	<step>testrunner-lite -a -v -f /usr/share/testrunner-lite-regression-tests/testdata/filter_tests.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>grep feature2 /tmp/testrunnerlitetestdir/res.xml</step>
	<step>grep sample_suite_domain /tmp/testrunnerlitetestdir/res.xml</step>
      </case>

      <case name="test_bugzilla_id" bugzilla_id="10362">
	<step>testrunner-lite -a -v -f /usr/share/testrunner-lite-regression-tests/trlitereg11.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>grep bugzilla_id /tmp/testrunnerlitetestdir/res.xml</step>
      </case>

      <case name="test_automatic_flag" bugzilla_id="17309">
	<step>testrunner-lite -a -v -f /usr/share/testrunner-lite-regression-tests/trlitereg19.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
      </case>


      <post_steps>
	<step>rm -fr /tmp/testrunnerlitetestdir</step>
      </post_steps>

      <environments>
	<scratchbox>false</scratchbox>
	<hardware>true</hardware>
      </environments>
    </set>


    <set name="test_output_stream_formats">
      <pre_steps>
	<step>rm -fr /tmp/testrunnerlitetestdir</step>
      </pre_steps>

      <case name="test_utf8">
	<step>testrunner-lite -v -f /usr/share/testrunner-lite-regression-tests/testdata/testrunner-tests-utf8.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>grep &quot;$(cat /usr/share/testrunner-lite-tests/testdata/unicode.txt)&quot; /tmp/testrunnerlitetestdir/res.xml</step>
	<step>cat /tmp/testrunnerlitetestdir/utf8_testdata</step>
	<step>grep -f /tmp/testrunnerlitetestdir/utf8_testdata /tmp/testrunnerlitetestdir/res.xml</step>
	<step>[ "$(stat /tmp/testrunnerlitetestdir/utf8_testdata | awk '/Size: [0-9]+/ { print $2 }')" = "17" ]</step>
	<step>rm -f /tmp/testrunnerlitetestdir/utf8_testdata</step>
      </case>

      <case name="test_non_utf8">
	<step>testrunner-lite -v -f /usr/share/testrunner-lite-regression-tests/testdata/testrunner-tests-non-utf8.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>stat /tmp/testrunnerlitetestdir/stdout.*</step>
      </case>

      <post_steps>
	<step>rm -fr /tmp/testrunnerlitetestdir</step>
      </post_steps>

      <environments>
	<scratchbox>false</scratchbox>
	<hardware>true</hardware>
      </environments>
    </set>


    <set name="test_get_file_feature">
      <pre_steps>
	<step>rm -fr /tmp/testrunnerlitetestdir</step>
      </pre_steps>

      <case name="test_local_get_file">
	<step>testrunner-lite -v -f /usr/share/testrunner-lite-regression-tests/testdata/testrunner-tests-get.xml -o /tmp/testrunnerlitetestdir/res.xml</step>
	<step>[ -d /tmp/testrunnerlitetestdir/ ]</step>
	<step>[ -f /tmp/testrunnerlitetestdir/gettest.txt ]</step>
	<step>[ -f /tmp/testrunnerlitetestdir/gettest2.txt ]</step>
	<step>[ -f /tmp/testrunnerlitetestdir/gettest3.txt ]</step>
	<step>[ -f /tmp/testrunnerlitetestdir/gettest4.txt ]</step>
	<step>[ -f /tmp/testrunnerlitetestdir/get\ test5.txt ]</step>

	<step>[ ! -f /tmp/gettest.txt ]</step>
	<step>[ -f /tmp/gettest2.txt ]</step>
	<step>[ -f /tmp/gettest3.txt ]</step>
	<step>[ ! -f /tmp/gettest4.txt ]</step>
	<step>[ -f /tmp/get\ test5.txt ]</step>

      </case>

      <post_steps>
	<step>rm -fr /tmp/testrunnerlitetestdir</step>
      </post_steps>

      <environments>
	<scratchbox>false</scratchbox>
	<hardware>true</hardware>
      </environments>
    </set>


    <set name="quoting_steps">
      <case name="quoting_01">
	<step>echo Hello World!</step>
      </case>

      <case name="quoting_02">
	<step>echo &quot;Hello World!&quot;</step>
      </case>

      <case name="quoting_03">
	<step>echo &apos;Hello World!&apos;</step>
      </case>

      <case name="quoting_04">
	<step>echo Hello World! | grep &quot;Hello World!&quot;</step>
      </case>

      <case name="quoting_05">
	<step>echo Hello World! | grep &apos;Hello World!&apos;</step>
      </case>

      <case name="quoting_06">
	<step>echo &quot;Hello World!&quot; | grep &quot;Hello World!&quot;</step>
      </case>

      <case name="quoting_07">
	<step>echo &quot;Hello World!&quot; | grep &apos;Hello World!&apos;</step>
      </case>

      <case name="quoting_08">
	<step>echo &apos;Hello World!&apos; | grep &quot;Hello World!&quot;</step>
      </case>

      <case name="quoting_09">
	<step>echo &apos;Hello World!&apos; | grep &apos;Hello World!&apos;</step>
      </case>

      <case name="quoting_10">
	<step>echo test foo bar | cut -d &apos; &apos; -f 2 | egrep &quot;^foo$&quot;</step>
      </case>

      <case name="quoting_11">
	<step>echo test foo bar | cut -d &quot; &quot; -f 2 | egrep &apos;^foo$&apos;</step>
      </case>

      <case name="quoting_12">
	<step>echo &quot;test foo bar&quot; | cut -d &apos; &apos; -f 2 | grep &apos;^foo$&apos;</step>
      </case>

      <case name="quoting_13">
	<step>echo &apos;test foo bar&apos; | cut -d &quot; &quot; -f 2 | grep &quot;^foo$&quot;</step>
      </case>

      <case name="quoting_14">
	<step>echo "'Hello World!'" | grep "'Hello World!'"</step>
      </case>

      <case name="quoting_15">
	<step>echo '"Hello World!"' | grep '"Hello World!"'</step>
      </case>

      <case name="ending_in_semicolon">
	<step>echo '"Hello World!"';</step>
      </case>

      <case name="testrunner_lite_version">
	<step>testrunner-lite -V | grep  "testrunner-lite version"</step>
      </case>

      <environments>
	<scratchbox>false</scratchbox>
	<hardware>true</hardware>
      </environments>
    </set>

    <set name="utf8-validation">
      <case name="basic-ut8-input">
	<!-- testrunner-lite should not create stdout.PID file. step outputs valid utf-8 -->
	<step>rm -f /tmp/stdout.*</step>
	<step>testrunner-lite -f /usr/share/testrunner-lite-regression-tests/testdata/utf.xml -o /tmp/utftestresult.xml</step>
	<step>[ ! -f /tmp/stdout.* ]</step>
      </case>
    </set>
  </suite>
</testdefinition>
